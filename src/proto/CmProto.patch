*** CmProto.ts	Thu Nov 16 18:32:03 2023
--- CmProto-patched.ts	Thu Nov 16 18:32:02 2023
***************
*** 2,9 ****
   * Generated by the protoc-gen-ts.  DO NOT EDIT!
   * compiler version: 4.25.1
   * source: src/proto/CmProto.proto
   * git: https://github.com/thesayyn/protoc-gen-ts */
! import * as dependency_1 from "./../../node_modules/@thegraid/wspbclient/lib/proto/GgProto";
  import * as pb_1 from "google-protobuf";
  export enum CmType {
      cm_none = 0,
--- 2,10 ----
   * Generated by the protoc-gen-ts.  DO NOT EDIT!
   * compiler version: 4.25.1
   * source: src/proto/CmProto.proto
+  * Patch import "@package" & KVPair constructor
   * git: https://github.com/thesayyn/protoc-gen-ts */
! import * as dependency_1 from "@thegraid/wspbclient";
  import * as pb_1 from "google-protobuf";
  export enum CmType {
      cm_none = 0,
*************** export class TypedMsg extends pb_1.Message {
*** 209,225 ****
      get has_strValue() {
          return pb_1.Message.getField(this, 5) != null;
      }
!     get value() {
          const cases: {
!             [index: number]: "none" | "boolValue" | "intValue" | "strValue";
          } = {
!             0: "none",
              3: "boolValue",
              4: "intValue",
              5: "strValue"
          };
          return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5])];
      }
      static fromObject(data: {
          boolValue?: boolean;
          intValue?: number;
--- 210,229 ----
      get has_strValue() {
          return pb_1.Message.getField(this, 5) != null;
      }
!     get whichValue() {
          const cases: {
!             [index: number]: undefined | "boolValue" | "intValue" | "strValue";
          } = {
!             0: undefined,
              3: "boolValue",
              4: "intValue",
              5: "strValue"
          };
          return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5])];
      }
+     get value(): boolean | number | string {
+         return this[this.whichValue]
+     }
      static fromObject(data: {
          boolValue?: boolean;
          intValue?: number;
*************** export class KVpair extends pb_1.Message {
*** 298,304 ****
      #one_of_decls: number[][] = [];
      constructor(data?: any[] | {
          name?: string;
!         value?: TypedMsg;
      }) {
          super();
          pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
--- 302,308 ----
      #one_of_decls: number[][] = [];
      constructor(data?: any[] | {
          name?: string;
!         value?: TypedMsg | number | string | boolean;  // Hack to allow inner value in constructor
      }) {
          super();
          pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
*************** export class KVpair extends pb_1.Message {
*** 307,313 ****
                  this.name = data.name;
              }
              if ("value" in data && data.value != undefined) {
!                 this.value = data.value;
              }
          }
      }
--- 311,322 ----
                  this.name = data.name;
              }
              if ("value" in data && data.value != undefined) {
!                 // Hack the constructor to accept value as TypedMsg.value:
!                 let value = data.value
!                 if (typeof (value) === 'number') value = new TypedMsg({ intValue: value })
!                 if (typeof (value) === 'string') value = new TypedMsg({ strValue: value })
!                 if (typeof (value) === 'boolean') value = new TypedMsg({ boolValue: value })
!                 this.value = value;
              }
          }
      }
*************** export class CmMsgBase extends pb_1.Message {
*** 389,394 ****
--- 398,417 ----
  }
  export class CmMsgBase extends pb_1.Message {
      #one_of_decls: number[][] = [];
+ 
+     get has_type() { return pb_1.Message.getField(this, cmField.cmField_type) }
+     get has_client() { return pb_1.Message.getField(this, cmField.cmField_client) }
+     get has_player() { return pb_1.Message.getField(this, cmField.cmField_player) }
+     get has_name() { return pb_1.Message.getField(this, cmField.cmField_name) }
+     get has_json() { return pb_1.Message.getField(this, cmField.cmField_json) }
+     //get has_srcSlot() { return pb_1.Message.getField(this, cmField.cmField_srcSlot) }
+     //get has_dstSlot() { return pb_1.Message.getField(this, cmField.cmField_dstSlot) }
+     get has_inform() { return pb_1.Message.getField(this, cmField.cmField_inform) }
+     get has_count() { return pb_1.Message.getField(this, cmField.cmField_count) }
+     get has_client_to() { return pb_1.Message.getField(this, cmField.cmField_client_to) }
+     get has_roster() { return this.roster?.length > 0 }
+     get has_params() { return pb_1.Message.getField(this, cmField.cmField_params) }
+ 
      constructor(data?: any[] | {
          type?: CmType;
          client?: number;
